version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - cd blacklist
      - pip install pipenv
  pre_build:
    commands:
      - pipenv install --dev
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - docker ps -la
      - echo "Running tests..."
      - pipenv run pytest --cov=src -v -s --cov-fail-under=70
      - echo "Building the Docker image for New Relic..."
      - docker build -t newrelic ./newrelic
      - docker tag newrelic:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/python_newrelic:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/python_newrelic:latest
      - echo "Building the Docker image for the blacklist service..."
      - docker build -t blacklist .
      - echo "Tagging the Docker images..."
      - docker tag blacklist:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest
  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest
      - printf '[{"name":"blacklist","imageUri":"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/blacklist:latest"}' > imageDetail.json
      - cat imagedefinitions.json 
artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json